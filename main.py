import matplotlib.pyplot as plt

#xn = [2.5, 2.59, 2.5, 1.8, 1, 1, 1.05, 1.02]
#yn = [3, 2.24, 1.5, 2.3, 3, 1.5, 2.2, 2.6]

#xu = [3, 2.98, 3.27, 3.82, 4.41, 4.63, 4.58]
#yu = [3.1, 2.11, 1.65, 1.49, 1.7, 2.11, 2.6]


xn = [1.7603549829968, 1.5, 1.6925611042841, 1.5, 0.9091651724919, 0.4572059810733, 0.5024019002152, 0.4195427151218, 0.3366835300284, 0.3969447555509]
yn = [1.711318716648, 2, 1.1388370741845, 0.5, 1.0559778890911, 1.8167758613123, 1.1840329933264, 0.566355431721, 1.1292289124682, 1.4640472889802]

xu = [2.6848376442511, 2.7739155829391, 2.7421020334077, 2.4112411182806, 2.1885462715604, 2.1185564625913, 2.0994683328724, 2.1058310427787]
yu = [1.4007341673148, 1.0953240918129, 0.7962767262172, 0.5863072993097, 0.7071987875292, 0.8662665351864, 1.1653139007821, 1.2325477168463]

xm = [3.0814132992958, 3.0560622470126, 3.1321154038622, 3.296897243703, 3.35182452365, 3.3983014528358, 3.478579785066, 3.6222357480041, 3.6856133787121, 3.6856133787121, 3.7489910094201, 3.9010973231193]
ym = [1.4238478977303, 0.9337275535884, 0.9041513259247, 1.3351192147391, 1.2801919347921, 1.0942842180487, 1.0858338672876, 1.3097681624559, 1.2675164086505, 1.136535971854, 1.0266814119601, 0.9252772028273]

xer = [4.1250316182876, 4.2982638088895, 4.5771253840047, 4.6320526639516, 4.5855757347658, 4.492621876394, 4.4, 4.3151645104116, 4.2940386335089, 4.3743169657391, 4.5602246824826, 4.7883841530314, 4.9193645898279, 4.9447156421111, 4.9742918697748, 4.9235897652084, 5, 5.063020552766, 5.2278023926068]
yer = [1.2506157071284, 1.1154100949513, 1.1027345688097, 1.1830129010399, 1.4280730731108, 1.4703248269162, 1.4, 1.2083639533231, 1.0182310611991, 0.8618995721193, 0.7942967660308, 0.9083765013052, 1.2844171101727, 1.3520199162612, 1.2506157071284, 0.8957009751636, 0.8, 0.7900715906503, 1.2548408825089]

xki = [5.5398454719186, 5.6030701423672, 5.6735537214973, 5.6445310712672, 5.524294377457, 5.520148284567, 5.6030701423672, 5.7357451148474, 5.9181732020079, 6.0384098958181, 6, 5.988656781138, 6.1379161251783, 6.3203442123387, 6.4613113705991, 6.5235027639492, 6.5317949497292, 6.5442332283992]
yki = [1.8062875559007, 1.9287940326205, 1.8666026392704, 1.7214893881201, 1.4354089787094, 1.1161598261787, 0.9461700176883, 0.9295856461283, 1.1285981048488, 1.4851620933895, 1.2, 0.9669004821384, 0.8466637883281, 0.9130012745683, 1.2115199626489, 1.5432073938497, 1.3276105635692, 1.0042153181485]

xkropka = [6.72355272898, 6.7093406949619]
ykropka = [1.9322359920738, 1.8682818389925]

xs = [8.6, 8.5087569402322, 8.3168369148903, 8.2732187273126, 8.3473696461947, 8.5349278527788, 8.7530187906673, 8.8925969909159, 8.9536624535247, 8.8925969909159, 8.7748278844562, 8.5174805777477]
ys = [1.6, 1.7210875318973, 1.6818311630774, 1.5509766003443, 1.424483856369, 1.3328856624558, 1.2369256497848, 1.1671365496605, 1.0886238120207, 1.0406438056852, 1.0144728931386, 1.0144728931386]

xaa = [9.3239882626432, 9.2351075165599, 9.2, 9.2, 9.2858965143218, 9.4763552559289, 9.5948629173733, 9.5483063360915, 9.4340310911273, 9.721835411778, 9.8445754897025, 9.912294153385, 9.7937864919406, 9.6583491645756, 9.6710464140161, 9.802251324901, 9.9969424829882]
yaa = [1.5393573610353, 1.6705622719202, 1.6, 1.4, 1.2600178733449, 1.2261585415037, 1.3573634523885, 1.5520546104758, 1.6155408576781, 1.3912227842298, 1.2473206239045, 1.073791548218, 0.8875652230911, 0.7309658133253, 0.6590147331626, 0.6463174837222, 0.6505499002023]

xsu = [11.7110711574518, 11.744930489293, 12, 12.147010054908, 12.1004534736262, 11.8295788188962, 11.8, 12.0242699769834, 12.3036094646738, 12.4559764579594, 12.4644412909197, 12.5575544534832, 12.7310835291696, 12.8066932604156, 12.8437849405961, 12.8284291082132, 12.8961477718958, 12.8114994422926]
ysu = [1.721351269682, 1.5943787752773, 1.4, 1.2049964591029, 1.0695591317379, 1.0441646328569, 1.2, 1.3192717040671, 1.4547090314321, 1.6747946884003, 1.4631738643925, 1.3192717040671, 1.2134612920632, 1.243368481524, 1.3212610099031, 1.3954552007099, 1.5393573610353, 1.6298161026424]

xp = [13.1375275235122, 13.2265406762104, 13.2748604793369, 13.3645972565718, 13.1530817329856, 13.0365362942154, 12.9549544870763, 12.9277605513632, 13.0520756860514, 13.2152393003297, 13.3628635227719, 13.4794089615421, 13.6425725758204, 13.6930755992875, 13.6775362074515, 13.5376816809272, 13.40948169828]
yp = [1.599304136707, 1.6995364849387, 1.6374110237761, 0.9436767074601, 0.2014620571102, 0.1975772091512, 0.2908135601674, 0.5005953499538, 1.1221710233948, 1.5495042988855, 1.7825951764259, 1.813673960098, 1.7748254805079, 1.6660497376557, 1.5145406672545, 1.3008740295091, 1.1726740468619]

xer2 = [13.8898874130767, 14.055975304484, 14.2359038535086, 14.3696968771422, 14.3835375347595, 14.258971616204, 14.0928837247967, 14, 13.954477148624, 14, 14.1667005654222, 14.1667005654222, 14.5403983210886, 14.6834184498005, 14.8, 14.8864147615205, 14.8818012089814, 14.858733446286, 14.8264385785123, 14.9325502869114, 15.061729758006, 15.2416583070306]
yer2 = [1.5772434940719, 1.3973149450473, 1.4157691552037, 1.5680163889937, 1.7663991481746, 1.8171482261046, 1.7294907278619, 1.6, 1.4203827077428, 1.2, 1.1158882401627, 1.2358406061791, 1.4157691552037, 1.6233790194628, 1.8, 1.7894669108701, 1.5772434940719, 1.38347428743, 1.2681354739527, 1.2635219214136, 1.4572911280555, 1.7110365177055]

xok1 = [16.720012040559, 16.7812187503594, 16.8, 16.7322533825191, 16.6894086856589, 16.7]
yok1 = [1.9423464447693, 1.8658380575189, 1.8, 1.7862693347785, 1.8229933606587, 1.9, 1.9423464447693]

xok2 = [16.8235174924678, 16.8673442512791, 16.8291725581209, 16.7740356680034]
yok2 = [1.4642680911249, 1.3978210697012, 1.3624769093695, 1.4048899017676]

xnos = [17.0727746102611, 17.2674948642438] 
ynos = [1.6813439232718, 1.6899345227122]

xb = [17.388539773422, 17.4556137298674, 17.5290756821649, 17.6312836157961, 17.6025376344623, 17.4939417049792]
yb = [2.1293692268195, 2.1038172434117, 1.9952213139285, 1.7620594653323, 1.5288976167361, 1.27976577851]

lenN = len(xn)
lenU = len(xu)
lenM = len(xm)
lenER = len(xer)
lenKI = len(xki)
lenKROPKA = len(xkropka)
lenS = len(xs)
lenAA = len(xaa)
lenSU = len(xsu)
lenP = len(xp)
lenER2 = len(xer2)
lenOK1 = len(xok1)
lenOK2 = len(xok2)
lenNOS = len(xnos)
lenB = len(xb)

tn = [i/lenN for i in range(lenN)]
tu = [i/lenU for i in range(lenU)]
tm = [i/lenM for i in range(lenM)]
ter = [i/lenER for i in range(lenER)]
tki = [i/lenKI for i in range(lenKI)]
tkropka = [i/lenKROPKA for i in range(lenKROPKA)]
ts = [i/lenS for i in range(lenS)]
taa =[i/lenAA for i in range(lenAA)]
tsu = [i/lenSU for i in range(lenSU)]
tp = [i/lenP for i in range(lenP)]
ter2 = [i/lenER2 for i in range(lenER2)]
tok1 = [i/lenOK1 for i in range(lenOK1)]
tok2 = [i/lenOK2 for i in range(lenOK2)]
tnos = [i/lenNOS for i in range(lenNOS)]
tb = [i/lenB for i in range(lenB)]

def from_matrix(ps, vs):
  n = len(vs) - 1
  q = [0 for i in range(n)]
  u = [0 for i in range(n)]
  p = [0 for i in range(n)]
  m = [0 for i in range(n+1)]
  q[0] = 0
  u[0] = 0

  def h(k):
    return ps[k] - ps[k-1]

  def lambd(k):
    return h(k)/(h(k)+h(k+1))

  def f(a,b):
    if a == b:
      return vs[a]
    return (f(a+1,b) - f(a,b-1))/(ps[b]-ps[a])

  def d(k):
    return 6*f(k-1,k+1)

  for k in range(1,n-1):
    p[k] = 2+(q[k-1]*lambd(k))
    q[k] = (lambd(k)-1)/p[k]
    u[k] = (d(k)-lambd(k)*u[k-1])/p[k]

  m[n] = 0
  m[n-1] = u[n-2]

  for k in range(n-2,1,-1):
    m[k] = u[k] + q[k]*m[k+1]

  return m


def nifs(x, ps, vs):
  n = len(vs) - 1
  m = from_matrix(ps, vs)

  def h(k):
    return ps[k] - ps[k-1]

  i = n-1
  while x - ps[i] < 0:
    i = i-1

  a = (m[i+1]-m[i])/(6*h(i))
  b = m[i]/2
  c = (((vs[i+1] - vs[i])/h(i)) - (h(i)*(m[i+1]+2*m[i])/6))
  s = vs[i] + (x-ps[i])*(c+(x-ps[i])*(b+(x-ps[i])*a))
  return s


M = 1000
nX = [0 for i in range(M+1)]
nY = [0 for i in range(M+1)]
uX = [0 for i in range(M+1)]
uY = [0 for i in range(M+1)]
mX = [0 for i in range(M+1)]
mY = [0 for i in range(M+1)]
erX = [0 for i in range(M+1)]
erY = [0 for i in range(M+1)]
kiX = [0 for i in range(M+1)]
kiY = [0 for i in range(M+1)]
kropkaX = [0 for i in range(M+1)]
kropkaY = [0 for i in range(M+1)]
sX = [0 for i in range(M+1)]
sY = [0 for i in range(M+1)]
aaX = [0 for i in range(M+1)]
aaY = [0 for i in range(M+1)]
suX = [0 for i in range(M+1)]
suY = [0 for i in range(M+1)]
pX = [0 for i in range(M+1)]
pY = [0 for i in range(M+1)]
er2X = [0 for i in range(M+1)]
er2Y = [0 for i in range(M+1)]
ok1X = [0 for i in range(M+1)]
ok1Y = [0 for i in range(M+1)]
ok2X = [0 for i in range(M+1)]
ok2Y = [0 for i in range(M+1)]
nosX = [0 for i in range(M+1)]
nosY = [0 for i in range(M+1)]
bX = [0 for i in range(M+1)]
bY = [0 for i in range(M+1)]

for i in range(M+1):
  nX[i] = nifs(i/M, tn, xn)
  nY[i] = nifs(i/M, tn, yn)
  uX[i] = nifs(i/M, tu, xu)
  uY[i] = nifs(i/M, tu, yu)
  mX[i] = nifs(i/M, tm, xm)
  mY[i] = nifs(i/M, tm, ym)
  erX[i] = nifs(i/M, ter, xer)
  erY[i] = nifs(i/M, ter, yer)
  kiX[i] = nifs(i/M, tki, xki)
  kiY[i] = nifs(i/M, tki, yki)
  kropkaX[i] = nifs(i/M, tkropka, xkropka)
  kropkaY[i] = nifs(i/M, tkropka, ykropka)
  sX[i] = nifs(i/M, ts, xs)
  sY[i] = nifs(i/M, ts, ys)
  aaX[i] = nifs(i/M, taa, xaa)
  aaY[i] = nifs(i/M, taa, yaa)
  suX[i] = nifs(i/M, tsu, xsu)
  suY[i] = nifs(i/M, tsu, ysu)
  pX[i] = nifs(i/M, tp, xp)
  pY[i] = nifs(i/M, tp, yp)
  er2X[i] = nifs(i/M, ter2, xer2)
  er2Y[i] = nifs(i/M, ter2, yer2)
  ok1X[i] = nifs(i/M, tok1, xok1)
  ok1Y[i] = nifs(i/M, tok1, yok1)
  ok2X[i] = nifs(i/M, tok2, xok2)
  ok2Y[i] = nifs(i/M, tok2, yok2)
  nosX[i] = nifs(i/M, tnos, xnos)
  nosY[i] = nifs(i/M, tnos, ynos)
  bX[i] = nifs(i/M, tb, xb)
  bY[i] = nifs(i/M, tb, yb)

plt.plot(nX, nY, color="crimson")
plt.plot(uX, uY, color="crimson")
plt.plot(mX, mY, color="crimson")
plt.plot(erX, erY, color="crimson")
plt.plot(kiX, kiY, color="crimson")
plt.plot(kropkaX, kropkaY, color="crimson")
plt.plot(sX, sY, color="crimson")
plt.plot(aaX, aaY, color="crimson")
plt.plot(suX, suY, color="crimson")
plt.plot(pX, pY, color="crimson")
plt.plot(er2X, er2Y, color="crimson")
plt.plot(ok1X, ok1Y, color="crimson")
plt.plot(ok2X, ok2Y, color="crimson")
plt.plot(nosX, nosY, color="crimson")
plt.plot(bX, bY, color="crimson")
plt.axis('equal')
plt.show()
